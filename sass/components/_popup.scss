.popup {
  height: 100vh;
  width: 100%;
  position: fixed;
  top: 0;
  left: 0;
  background-color: rgba($color-black, .8);
  z-index: 9999; // we want it as high as possible, higher than hamburger menu

  opacity: 0; // initial state hidden
  visibility: hidden;
  transition: all 300ms;

  @supports (backdrop-filter: blur(10px)) or (-webkit-backdrop-filter: blur(10px)) {
    // currently only works on Safari
    -webkit-backdrop-filter: blur(10px);
            backdrop-filter: blur(10px);
    background-color: rgba($color-black, .3);
  }

  &__content {
    @include absCenter;

    width: 75%;
    background-color: $color-white;
    box-shadow: 0 2rem 4rem rgba($color-black, .2);
    border-radius: $default-border-radius;

    overflow: hidden; // reveal rounded corners overflown by img
    display: table; // table on parent, table-cells on children (children gets applied equal height by browsers)

    opacity: 0; // initial state scaled down and invisible
    transform: translate(-50%, -50%) scale(.25); // re-declare `translate()` from our @mixin so not overwritten
    transition: all 500ms 200ms; // we add a short `transition-delay`

    @include respond(tab-land) {
      display: block; // we no longer need `table`
    }

    @include respond(tab-port) {
      width: 85%; // increase width on smaller screens to allow more space for content
    }

    @include respond(phone) {
      width: 95%; // increase width even further for mobile screens
    }

  }

  // Equal height columns using CSS tables trick
  // https://css-tricks.com/fluid-width-equal-height-columns/#article-header-id-2
  // Give each table cell a percentage width that totals up to 100%
  &__left {
    width: 33.333333%;
    display: table-cell;

    @include respond(tab-land) {
      width: 100%;
      display: inline-block; // we no longer need `table-cell`, but `inline-block` so we can manipulate img element size
      text-align: center; // horizontally center imgs
      margin-top: 2.5rem; // vertically align to close icon
    }

    // landscape
    @media (min-width: 375px)
       and (max-width: 667px)
       and (orientation: landscape) {
      display: none;
    }

    @include respond(phone) {
      display: none;
    }

  }

  &__right {
    width: 66.666667%;
    display: table-cell;
    vertical-align: middle;
    padding: 3rem 5rem;

    @include respond(tab-land) {
      width: 100%;
      display: inline-block; // inline-block so we can use vertical-align property to center things
    }

    @include respond(tab-port) {
      padding: 2.5rem; // align to same padding as close icon on smaller screen to decrease overall padding
    }

  }

  &__img {
    display: block;
    width: 100%;

    @include respond(tab-land) {
      width: 40%; // each image will take at least 50% width, anything greater they break to new line; 40% looks good here
      display: inline-block; // so we can stack image side by side, no new lines
      vertical-align: middle; // just in case each image has different height, at least they are vertically centered

      &:not(:last-child) {
        margin-right: 5rem; // gap between images
      }

    }

    @include respond(tab-port) {
      width: 35%;

      &:not(:last-child) {
        margin-right: 7rem; // increase gap between two images and align along outer-padding up to 600px screen width
      }

    }

  }

  &__text {
    font-size: 1.4rem;
    margin-bottom: 4rem;

    -webkit-column-count: 2;
       -moz-column-count: 2;
            column-count: 2;
    -webkit-column-gap: 4rem;
       -moz-column-gap: 4rem;
            column-gap: 4rem;
    -webkit-column-rule: 1px solid $color-grey-light-2;
       -moz-column-rule: 1px solid $color-grey-light-2;
            column-rule: 1px solid $color-grey-light-2; // column separator style

    // Only supported on Android & Mac platforms (and only the "auto" value) for now. See https://caniuse.com/#feat=css-hyphens
    // auto hyphenate words when text wraps; specify @lang attribute in html
    -webkit-hyphens: auto;
        -ms-hyphens: auto;
            hyphens: auto;

    @include respond(tab-port) {
      font-size: 1.6rem;
      margin-bottom: 2rem;

      -webkit-column-count: auto; // remove column properties on smaller screens, reset all to initial values
         -moz-column-count: auto;
              column-count: auto;
      -webkit-column-gap: normal;
         -moz-column-gap: normal;
              column-gap: normal;
      -webkit-column-rule: medium none currentColor;
         -moz-column-rule: medium none currentColor;
              column-rule: medium none currentColor;
    }

    @include respond(phone) {
      font-size: 1.8rem; // increase font-size to make text more readable on mobile screens
    }

  }


  // FUNCTIONALITY
  // Open states
  &:target {
    opacity: 1;
    visibility: visible;
  }

  &:target &__content {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1); // again we re-declare `translate()` from our @mixin so not overwritten
  }

  &__close {

    &:link,
    &:visited {
      color: $color-grey-dark;
      position: absolute;
      top: 2.5rem;
      right: 2.5rem;
      font-size: 3rem;
      line-height: 1; // remove pre-defined line-height (extra height on text) so our positioning gets applied as intended
      text-decoration: none;
      display: inline-block;
      transition: all 200ms;
    }

    &:hover,
    &:active {
      color: $color-primary;
    }

  }

}
