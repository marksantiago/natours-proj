.story {
  width: 75%;
  margin: 0 auto;
  box-shadow: 0 3rem 6rem rgba($color-black, .1);
  background-color: rgba($color-white, .6);
  border-radius: $default-border-radius;
  padding: 6rem;
  padding-left: 9rem; // 6rem + 3rem(from translatingX shape -3rem) = 9rem
  font-size: $default-font-size;
  transform: skewX(-12deg);

  @include respond(tab-port) {
    width: 100%; // give it more space
    padding: 4rem; // decrease padding
    padding-left: 7rem;
  }

  @include respond(phone) {
    transform: skewX(0); // reset to initial value
  }

  &__shape {
    width: 15rem;
    height: 15rem;
    float: left;
    transform: translateX(-3rem) skewX(12deg);
    position: relative;


    // fallbacks for when `clip-path` property unsupported
    overflow: hidden; // so img don't overflow container
    border-radius: 50%; // makes container round

    @supports (clip-path: circle(50% at 50% 50%)) or
              (-webkit-clip-path: circle(50% at 50% 50%))
    {
      -webkit-clip-path: circle(50% at 50% 50%);
              clip-path: circle(50% at 50% 50%);

      // Text wrapping around shapes only useful if `clip-path` property supported, otherwise, fallbacks to box-model
      -webkit-shape-outside: circle(50% at 50% 50%); // `shape-outside` requires float and dimensions
              shape-outside: circle(50% at 50% 50%);
      overflow: visible; // reset to initial
      border-radius: 0; // reset to initial
    }


    @include respond(phone) {
      transform: translateX(-3rem) skewX(0); // reset `skewX()` to initial value
    }

  }

  &__img {
    height: 100%;
    transform: translateX(-4rem) scale(1.4);
    transition: all 500ms;
    backface-visibility: hidden; // flickering fix

    @include respond(tab-port) {
      transition: none; // disable transition
    }

  }

  &__text {
    transform: skewX(12deg);

    @include respond(phone) {
      transform: skewX(0); // reset to initial value
    }

  }

  &__caption {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, 20%);
    color: $color-white;
    text-transform: uppercase;
    font-size: 1.7rem;
    text-align: center;
    opacity: 0;
    transition: all 500ms;
    backface-visibility: hidden; // flickering fix

    @include respond(tab-port) {
      font-size: 2rem; // increase `font-size` just a bit
      transition: none; // disable transition
      opacity: 1; // keep caption visible at all times
      transform: translate(-50%, -50%); // keep it at center of img at all times
    }

  }

  &:hover &__caption {
    opacity: 1;
    transform: translate(-50%, -50%);
  }

  &:hover &__img {
    transform: translateX(-4rem) scale(1);
    filter: blur(3px) brightness(80%);

    @include respond(tab-port) {
      transform: translateX(-4rem) scale(1.4); // keep img scaled the same if clicked on smaller devices
      filter: none; // reset to initial value
    }

  }

}
